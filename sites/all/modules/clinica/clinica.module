<?php

//Helpers
require_once 'inc/clinica.helpers.php';

//Reports
require_once 'reports/ReportSchedules.php';
require_once 'reports/ReportPet.php';



/**
 * @return array[]
 */
function clinica_theme()
{
  return array(
    'clinica_report_scheduler' => array(
      'path' =>  drupal_get_path('module', 'clinica'),
      'template' => 'templates/clinica_scheduler',
      'variables' => array('dados' => NULL),
    ),
    'clinica_modal' => array(
      'path' =>  drupal_get_path('module', 'clinica'),
      'template' => 'templates/clinica_modal',
      'variables' => array('dados' => NULL),
    ),
    'clinica_report_table_theme' => array(
      'function' => '_bootstrap_avanz_table',
      'variables' => array('variables' => array()),
    ),
    'clinica_report_pets' => array(
      'path' =>  drupal_get_path('module', 'clinica'),
      'template' => 'templates/clinica_pets',
      'variables' => array('dados' => NULL),
    ),
  );
}


function clinica_user_login(&$edit, $account) {
  drupal_goto('user-page');
}

/**
 * Implementation of hook_menu().
 */
function clinica_menu() {

  $menuitems['pets'] = array(
    'title' => 'Pets',
    'page callback' => '_pets_list',
    'access callback' => 'user_is_logged_in',
    'menu_name' => 'main-menu',
    'type' => MENU_NORMAL_ITEM,
  );

  $menuitems['pets/download'] = array(
    'page callback' => '_clinica_pets_download',
    'access callback' => 'user_is_logged_in',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $menuitems['schedules'] = array(
    'title' => 'Agendametos',
    'page callback' => '_schedulers_list',
    'access callback' => 'user_is_logged_in',
    'menu_name' => 'main-menu',
    'type' => MENU_NORMAL_ITEM,
  );

  $menuitems['schedules/download'] = array(
    'page callback' => '_clinica_scheduler_download',
    'access callback' => 'user_is_logged_in',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $menuitems['sobre-nos'] = array(
    'title' => 'Quem Somos',
    'page callback' => 'clinica_mymenu_page_callback',
    'access callback' => 'user_is_anonymous',
    'menu_name' => 'main-menu',
    'type' => MENU_NORMAL_ITEM,
  );

  $menuitems['Serviços'] = array(
    'title' => 'Serviços',
    'page callback' => 'clinica_mymenu_page_callback',
    'access callback' => 'user_is_anonymous',
    'menu_name' => 'main-menu',
    'type' => MENU_NORMAL_ITEM,
  );

  $menuitems['login'] = array(
    'title' => 'Entrar',
    'page callback' => '_login_page',
    'access callback' => 'user_is_anonymous',
    'menu_name' => 'main-menu',
    'type' => MENU_NORMAL_ITEM,
  );


  return $menuitems;

}


/**
 * @return string
 */
function _login_page() {
  $result = "<div class='login-wrapper'>";
  $result = "<a class='login-link' href='/user'>Login</a> <br>";
  $result.="<a class='register-link' href='/user/register'>Registrar-se</a>";
  $result.="</div>";
  return $result;
}

function _pets_list() {
  return report_pet()->getTable();
}

/**
 * Callback para a o download da listagem do relatório de pets
 *
 * @return string
 * @throws Exception
 */
function _clinica_pets_download()
{
  return report_pet()->toDownload()->getTable();
}


/**
 * @return string
 * @throws Exception
 */
function _schedulers_list() {
  clinica_unpublish_schedule_last_day();

  return report_schedules()->getTable();
}

/**
 * Callback para a o download da listagem do relatório de agendamentos
 *
 * @return string
 * @throws Exception
 */
function _clinica_scheduler_download()
{
  return report_schedules()->toDownload()->getTable();
}



/**
 * Implements hook_node_insert
 *
 * @param $node
 * @throws Exception
 */
function clinica_node_insert($node){
  if ($node->type == "pet"){
    $updateNode = node_load($node->nid);
    $updateNode->title = $node->title . ' - ' . $node->name;
    node_save($updateNode);
    drupal_goto('pets');
  }
  if ($node->type == 'scheduler') {
    drupal_goto('pets');
  }
}

/**
 * Implements hook_user_insert
 *
 * @param $edit
 * @param $account
 * @param $category
 * @throws Exception
 */
function clinica_user_insert(&$edit, $account, $category) {
  $user = user_load($edit['uid']);
  clinica_add_role_to_user($user->uid, "Tutor");
  $user->status = 1;
  user_save($user);
  clinica_reset_password($user);
  return drupal_goto('user');
}


/**
 * Implements hook_form_alter().
 */
function clinica_form_alter(&$form, &$form_state, $form_id) {

  global $user;
  $is_administrator = in_array('administrator', array_values($user->roles));

  if($form_id == 'scheduler_node_form'){
    // if $user does NOT have the administrator role.
    if (!$is_administrator) {
      // disable vertical tabs for this form
      form_disable_vertical_tabs($form);
    }
  }
}





